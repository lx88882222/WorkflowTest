/*************************************************************************
【文件名】                 Point3D.cpp
【功能模块和目的】         Point3D类的实现
【开发者及日期】           李想 2024/8/1
【更改记录】               （若修改过则必需注明）
*************************************************************************/

#include"Point3D.hpp"

/*************************************************************************
【函数名称】       Point3D::Point3D
【函数功能】        带参数和默认值的构造函数
【参数】            输入参数 double X X坐标
                    输入参数 double Y Y坐标
                    输入参数 double Z Z坐标
【返回值】         无
【开发者及日期】   李想 2024/8/1
【更改记录】       （若有修改，则必需注明）
*************************************************************************/
Point3D::Point3D(double X, double Y, double Z): Vector3D(X, Y, Z){
        //调用基类构造函数
}

/*************************************************************************
【函数名称】       Point3D::~Point3D
【函数功能】        析构函数
【参数】            无
【返回值】         无
【开发者及日期】   李想 2024/8/1
【更改记录】       （若有修改，则必需注明）
*************************************************************************/
Point3D::~Point3D(){
    //析构函数
}

/*************************************************************************
【函数名称】       Point3D::Point3D
【函数功能】       拷贝构造函数
【参数】           无
【返回值】         无
【开发者及日期】   李想 2024/8/1
【更改记录】       （若有修改，则必需注明）
*************************************************************************/

Point3D::Point3D(const Point3D& APoint): Vector3D(APoint){
    //调用基类拷贝构造函数
}

/*************************************************************************
【函数名称】       Point3D::operator=
【函数功能】        赋值构造函数
【参数】            输入参数 const Point3D& p 三维点
【返回值】         Point3D& 三维点
【开发者及日期】   李想 2024/8/1
【更改记录】       （若有修改，则必需注明）
*************************************************************************/
Point3D& Point3D::operator=(const Point3D& APoint){
    if (this == &APoint) {
        return *this;
    }
    Vector3D::operator=(APoint);
    return *this;
}

/*************************************************************************
【函数名称】       Point3D::operator-
【函数功能】        重载减法运算符，两点相减产生一个三维向量
【参数】            输入参数 const Point3D& Other 另一个三维点
【返回值】         Vector3D 三维向量
【开发者及日期】   李想 2024/8/1
【更改记录】       （若有修改，则必需注明）
*************************************************************************/

Vector3D Point3D::operator-(const Point3D& Other) const{
    return Vector3D(X - Other.X, Y - Other.Y, Z - Other.Z);
}

/*************************************************************************
【函数名称】       Point3D::Distance
【函数功能】        求两点之间的距离
【参数】            输入参数 const Point3D& Other 另一个三维点
【返回值】         double 两点之间的距离
【开发者及日期】   李想 2024/8/1
【更改记录】       （若有修改，则必需注明）
*************************************************************************/
double Point3D::Distance(const Point3D& Other) const{
    return Vector3D(X - Other.X, Y - Other.Y, Z - Other.Z).Norm();
}

/*************************************************************************
【函数名称】       Point3D::Distance
【函数功能】        静态函数，求两点之间的距离
【参数】            输入参数 const Point3D& Point1 第一个三维点
                    输入参数 const Point3D& Point2 第二个三维点
【返回值】         double 两点之间的距离
【开发者及日期】   李想 2024/8/2
【更改记录】       （若有修改，则必需注明）
*************************************************************************/
double Point3D::Distance(const Point3D& Point1, const Point3D& Point2){
    return Point1.Distance(Point2);
}